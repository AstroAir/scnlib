name: Windows

on:
  push:
    branches:
      - master
      - dev
    paths-ignore:
      - '**.md'
      - '**/docs/**'
  pull_request:
    branches:
      - master
      - dev
    paths-ignore:
      - '**.md'
      - '**/docs/**'

jobs:
  msvc:
    runs-on: windows-${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ 2019, 2022 ]
        platform: [ Win32, x64 ]
        type: [ Debug, Release ]
        std: [ 17, 20 ]

    steps:
      - uses: actions/checkout@v3

      - name: Create Build Environment
        run: cmake -E make_directory ${{ runner.workspace }}/build

      - name: Run CMake
        working-directory: ${{ runner.workspace }}/build
        shell: bash
        run: |
          cmake -A ${{ matrix.platform }} -DCMAKE_CXX_STANDARD=${{ matrix.std }} -DSCN_CI=ON $GITHUB_WORKSPACE

      - name: Build
        working-directory: ${{ runner.workspace }}/build
        run: cmake --build . --config ${{ matrix.type }} --parallel

      - name: Test
        working-directory: ${{ runner.workspace }}/build
        run: ctest -C ${{ matrix.type }} --output-on-failure

  clang-cl:
    runs-on: windows-${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ 2019, 2022 ]
        std: [ 17, 20 ]
        platform: [ x64 ]
        exclude:
          # clang-cl ICEs with MSVC STL <ranges>
          - std: 20

    steps:
      - uses: actions/checkout@v3

      - name: Create Build Environment
        run: cmake -E make_directory ${{ runner.workspace }}/build

      - name: Run CMake
        working-directory: ${{ runner.workspace }}/build
        shell: bash
        run: |
          cmake -T ClangCL -DCMAKE_CXX_STANDARD=${{ matrix.std }} -DCMAKE_BUILD_TYPE=Debug \
            -DSCN_CI=ON -DSCN_PEDANTIC=ON -DSCN_WERROR=ON $GITHUB_WORKSPACE

      - name: Build
        working-directory: ${{ runner.workspace }}/build
        run: cmake --build . --config Debug --parallel

      - name: Test
        working-directory: ${{ runner.workspace }}/build
        run: ctest -C Debug --output-on-failure

  msys:
    runs-on: windows-2022
    defaults:
      run:
        shell: msys2 {0}
    strategy:
      fail-fast: false
      matrix:
        sys:
          # MSYS recommended default:
          # gcc, ucrt, libstdc++
          - ucrt64
          # gcc, msvcrt, libstdc++
          - mingw32
          - mingw64
          # llvm, ucrt, libc++
          - clang32
          - clang64
        exclude:
          # FIXME: bugging out with float parsing
          - sys: clang32
          - sys: clang64

    steps:
      - uses: actions/checkout@v3

      - uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: ${{ matrix.sys }}
          install: >-
            git
            make
          pacboy: >-
            toolchain:p
            cmake:p
            ninja:p

      - name: Build and test
        run: |
          mkdir build
          cd build
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug \
            -DSCN_DISABLE_TOP_PROJECT=ON -DSCN_PEDANTIC=ON -DSCN_WERROR=OFF -DSCN_TESTS=ON ..
          cmake --build . --parallel -- -k 0
          ctest --output-on-failure
